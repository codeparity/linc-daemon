#   linc is not cyberoam v1.0
#   Copyright (C) 2002  Mayur Naik <mayur@freeshell.org>.
# 
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; version 2 of the License, with the
#   following exceptions:
#   1) Any existing copyright or authorship information in any given source
#      file must remain intact.  If you modify a source file, a notice to that
#      effect must be appended to the authorship information in the source file.
# 
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
# 
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
# 
#   In short you can not change/modify/remove the information above, if you do
#   redistribute this program or any of its modified form, it must be free and
#   there is NO WARRANTY, the author can not be held responsible for any kind
#   of the damaged caused by this program.
#

dnl Process this file with autoconf to produce a configure script.
AC_INIT(ActiveState.h)
AM_INIT_AUTOMAKE(linc-daemon, 1.2)

CXXFLAGS="-O2"

dnl Checks for programs.
AC_PROG_CPP
AC_PROG_CXX

dnl Checks for libraries.

dnl Checks for header files.
AC_CHECK_HEADERS(syslog.h)

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Checks for library functions.

dnl Compile time features

dnl runtime features
AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_MSG_CHECKING(whether iomanip works)
AC_TRY_RUN([
#include <iostream>
#include <iomanip>
#include <sstream>
#include <string>
#include <assert.h>

using std::ios;

using std::cout;
using std::endl;
using std::ends;
using std::setw;
using std::setfill;
using std::left;
using std::string;
using std::ostringstream;

int main(void)
{
  ostringstream oSrmA;
  oSrmA << '(' << setw(4) << setfill('#') << left << 12 << ')';
  string oStrA = oSrmA.str();
  string oStrB("(12##)");
  assert(oStrA == oStrB);
}], AC_DEFINE(IOMANIP_WORKS, 1) AC_MSG_RESULT(yes)
, AC_MSG_RESULT(no)
, AC_MSG_WARN(Assuming that iomanip does not work for cross compilations))
AC_LANG_RESTORE

AC_OUTPUT(Makefile linc.spec doxy.cfg)

#
#   This file is part of linc $Name: rel-1-2 $
#
#   $Log: configure.in,v $
#   Revision 1.10  2003/04/05 06:23:46  mrnk
#   README
#
#   Revision 1.9  2003/04/01 11:13:34  mrnk
#   Fixed crash when /home/mayur was not defined. Added initscript.
#
#   Revision 1.8  2003/04/01 08:47:33  mrnk
#   Fixed code to work with gcc3.
#
#   Revision 1.7  2002/06/24 11:15:22  mrnk
#   Disabling dumper code. Actually thinking of using libpcap to write the decode
#   utility, wherein the tool can either sniff on the network or accept data from
#   a tcpdump dump file.
#
#   Revision 1.6  2002/06/23 09:38:43  mrnk
#   Started packet dump interpretation tool
#
#   Revision 1.5  2002/06/22 12:22:39  mrnk
#   Preparing for stable release 1.0
#
#   Revision 1.4  2002/06/19 17:00:36  mrnk
#   Added man page to TODO
#
#   Revision 1.3  2002/06/19 16:18:17  mrnk
#   Added spec file for building rpms
#
#   Revision 1.2  2002/06/19 11:59:49  mrnk
#   Added CVS keywords to all source files
#
